<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="http://localhost:4000/assets/xslt/rss.xslt" ?>
<?xml-stylesheet type="text/css" href="http://localhost:4000/assets/css/rss.css" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
	<channel>
		<title>Griffin CS</title>
		<description>Logging the adventures and exploits of a classial school computer science program.</description>
		<link>http://localhost:4000/</link>
		<atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml" />
		
			<item>
				<title>Problem Writeup: Nice Netcat and Let&apos;s Warm Up - CTF 3</title>
				<link>http://localhost:4000/ctf/intro-netcat/</link>
				<pubDate>Tue, 01 Nov 2022 00:00:00 -0600</pubDate>
				<description>&lt;p&gt;Category: General Skills&lt;/p&gt;

&lt;h2 id=&quot;description-for-nice-netcat&quot;&gt;Description for Nice Netcat&lt;/h2&gt;

&lt;p&gt;“There is a nice program that you can talk to by using this command in a shell: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$ nc mercury.picoctf.net 49039&lt;/code&gt;, but it doesn’t speak English…”&lt;/p&gt;

&lt;h2 id=&quot;approach&quot;&gt;Approach&lt;/h2&gt;

&lt;p&gt;This problem introduces us to the Linux tool &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;netcat&lt;/code&gt;, a powerful tool for connecting to other computers, port scanning, and port listening.&lt;/p&gt;

&lt;h3 id=&quot;unzipping-the-file&quot;&gt;Unzipping the File&lt;/h3&gt;

</description>
				<guid isPermaLink="true">http://localhost:4000/ctf/intro-netcat/</guid>
			</item>
		
			<item>
				<title>Problem Writeup: What&apos;s a Netcat? - CTF 3</title>
				<link>http://localhost:4000/ctf/whats-a-netcat/</link>
				<pubDate>Mon, 31 Oct 2022 00:00:00 -0600</pubDate>
				<description>&lt;p&gt;Category: General Skills&lt;/p&gt;

&lt;h2 id=&quot;description-for-nice-netcat&quot;&gt;Description for Nice Netcat&lt;/h2&gt;

&lt;p&gt;“Using netcat (nc) is going to be pretty important. Can you connect to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;jupiter.challenges.picoctf.org&lt;/code&gt; at port &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;25103&lt;/code&gt; to get the flag?”&lt;/p&gt;

&lt;h2 id=&quot;approach&quot;&gt;Approach&lt;/h2&gt;

&lt;p&gt;This problem introduces us to the Linux tool &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;netcat&lt;/code&gt;, a powerful tool for connecting to other computers, port scanning, and port listening.&lt;/p&gt;

&lt;h3 id=&quot;running-netcat&quot;&gt;Running netcat&lt;/h3&gt;

&lt;p&gt;We can open the manual page (i.e., the documentation page) for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;netcat&lt;/code&gt; by typing &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;man nc&lt;/code&gt; in the terminal. The page that appears tells us about netcat and–most importantly–how to run a basic netcat command in this format:  &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nc [destination] [port]&lt;/code&gt;. So for this problem, we run this command:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pimaker-picoctf@webshell:~$ nc jupiter.challenges.picoctf.org 25103
You&apos;re on your way to becoming the net cat master
picoCTF{nEtCat_Mast3ry_d0c64587}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;That was easy!&lt;/p&gt;

&lt;p&gt;Press CTRL + C to end the netcat connection.&lt;/p&gt;
</description>
				<guid isPermaLink="true">http://localhost:4000/ctf/whats-a-netcat/</guid>
			</item>
		
			<item>
				<title>Problem Writeup: Tab, Tab, Attack - CTF 2</title>
				<link>http://localhost:4000/ctf/tab-tab-attack/</link>
				<pubDate>Tue, 25 Oct 2022 00:00:00 -0600</pubDate>
				<description>&lt;p&gt;Category: General Skills&lt;/p&gt;

&lt;h2 id=&quot;description&quot;&gt;Description&lt;/h2&gt;

&lt;p&gt;“Using tabcomplete in the Terminal will add years to your life, esp. when dealing with long rambling directory structures and filenames: Addadshashanammu.zip”&lt;/p&gt;

&lt;h2 id=&quot;approach&quot;&gt;Approach&lt;/h2&gt;

&lt;p&gt;This problem teaches us the time-saving power of the TAB key and gives us practice navigating a Linux filesystem (using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cd&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ls&lt;/code&gt;).&lt;/p&gt;

&lt;h3 id=&quot;unzipping-the-file&quot;&gt;Unzipping the File&lt;/h3&gt;

&lt;p&gt;We begin by using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;wget&lt;/code&gt; to download the file. Since it’s a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.zip&lt;/code&gt; file–a compressed file or folder(s)–we’ll begin by unzipping it with Linux’s built-in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;unzip&lt;/code&gt; tool:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
				<guid isPermaLink="true">http://localhost:4000/ctf/tab-tab-attack/</guid>
			</item>
		
			<item>
				<title>Problem Writeup: Mod 26 - CTF 2</title>
				<link>http://localhost:4000/ctf/mod-26/</link>
				<pubDate>Mon, 24 Oct 2022 00:00:00 -0600</pubDate>
				<description>&lt;p&gt;Category: Cryptography&lt;/p&gt;

&lt;h2 id=&quot;description&quot;&gt;Description&lt;/h2&gt;

&lt;p&gt;“Cryptography can be easy, do you know what ROT13 is? &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cvpbPGS{arkg_gvzr_V&apos;yy_gel_2_ebhaqf_bs_ebg13_uJdSftmh}&lt;/code&gt;”&lt;/p&gt;

&lt;h2 id=&quot;approach&quot;&gt;Approach&lt;/h2&gt;

&lt;p&gt;This problem introduces us to the world of cryptography. We will explore the ancient Caesar cipher and learn how to use CyberChef, a very powerful tool we will be using a lot in our CTF problems.&lt;/p&gt;

&lt;h3 id=&quot;encryption&quot;&gt;Encryption&lt;/h3&gt;

&lt;p&gt;The problem description includes a string of seeming gibberish: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cvpbPGS{arkg_gvzr_V&apos;yy_gel_2_ebhaqf_bs_ebg13_uJdSftmh}&lt;/code&gt;. Looking at the string more closely, we notice that it looks to be in the general format of a CTF flag; in fact, the first six letters could be an encrypted form of “picoCTF”.&lt;/p&gt;

&lt;p&gt;Additionally, the problem description asks if we know what ROT13 is. A quick Google search tells us that ROT13 is a simple shift cipher, where every letter of the alphabet is shifted a certain number of places to the right to create an encoded message:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Input	ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz
Output	NOPQRSTUVWXYZABCDEFGHIJKLMnopqrstuvwxyzabcdefghijklm
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Let’s begin, then, by assuming that the given string is the CTF flag encrypted by ROT13.&lt;/p&gt;

&lt;h3 id=&quot;cyberchef&quot;&gt;Cyberchef&lt;/h3&gt;

&lt;p&gt;To decrypt the string, we can write out the message one character at a time–or we could use a computer to speed up this task. There are plenty of ROT13 decrypters online, but we will use a website called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cyberchef.com&lt;/code&gt; for this.&lt;/p&gt;

&lt;p&gt;Copy the encrypted string and go to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cyberchef.com&lt;/code&gt;. Search for ROT13 in the Search bar on the CyberChef website, and drag the ROT 13 box into the Recipe space. Then paste the encrypted string into the Input box, and immediately the decrypted string appears in the Output box.&lt;/p&gt;

&lt;p&gt;You should bookmark the CyberChef website because we will return to it soon.&lt;/p&gt;
</description>
				<guid isPermaLink="true">http://localhost:4000/ctf/mod-26/</guid>
			</item>
		
			<item>
				<title>Problem Writeup: Obedient Cat - CTF 1</title>
				<link>http://localhost:4000/ctf/obedient-cat/</link>
				<pubDate>Fri, 14 Oct 2022 00:00:00 -0600</pubDate>
				<description>&lt;p&gt;Category: General Skills&lt;/p&gt;

&lt;h2 id=&quot;description&quot;&gt;Description&lt;/h2&gt;

&lt;p&gt;“This file has a flag in plain sight (aka “in-the-clear”). Download flag.”&lt;/p&gt;

&lt;h2 id=&quot;approach&quot;&gt;Approach&lt;/h2&gt;

&lt;p&gt;This is a very simple problem that introduces us to the webshell and to two important Linux commands:  &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;wget&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cat&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&quot;wget&quot;&gt;wget&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;wget&lt;/code&gt; is a Linux tool for retrieving files from the internet (it is short for “web get”). Instead of downloading the file linked in the problem description, we will download it into the webshell. Though it is coming from a pretty trusted source, it’s good not to download the mystery file directly into our Downloads folder, if we can help it.&lt;/p&gt;

&lt;p&gt;To download the file, we first right-click on the link, then select “Copy Link Address”. This copies the URL to our clipboard. Then in the webshell, type &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;wget&lt;/code&gt;, a space, and paste in the URL we just copied:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pimaker-picoctf@webshell:~$ wget https://mercury.picoctf.net/static/a5683698ac318b47bd060cb786859f23/flag
--2022-10-17 22:37:09--  https://mercury.picoctf.net/static/a5683698ac318b47bd060cb786859f23/flag
Resolving mercury.picoctf.net (mercury.picoctf.net)... 18.189.209.142
Connecting to mercury.picoctf.net (mercury.picoctf.net)|18.189.209.142|:443... connected.
HTTP request sent, awaiting response... 200 OK
Length: 34 [application/octet-stream]
Saving to: &apos;flag.1&apos;

flag              100%[==================&amp;gt;]      34  --.-KB/s    in 0s      

2022-10-17 22:37:10 (12.7 MB/s) - &apos;flag.1&apos; saved [34/34]

pimaker-picoctf@webshell:~$ 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;ls&quot;&gt;ls&lt;/h3&gt;

&lt;p&gt;When we hit ENTER, a lot of things happen almost instantly. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;wget&lt;/code&gt; connects to the URL we pasted, requests the file, then saves it to the webshell (in our user directory). To see the file that was downloaded, enter &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ls&lt;/code&gt; (short for “list”) in the command prompt:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pimaker-picoctf@webshell:~$ ls
README.txt  flag
pimaker-picoctf@webshell:~$ 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;There are currently two files in our user directory. The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;README.txt&lt;/code&gt; file contains a lot of useful tips and information for using the pico webshell; you’ll be able to read it after finishing the next step.&lt;/p&gt;

&lt;h3 id=&quot;cat&quot;&gt;cat&lt;/h3&gt;

&lt;p&gt;To read the contents of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;flag&lt;/code&gt; file, we will use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cat&lt;/code&gt;, another Linux tool that shows us the contents of a file or allows us to add to the file (“cat” is short for “concatenate”, which means to join together). To see the contents of the file we just downloaded, we enter &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cat flag&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pimaker-picoctf@webshell:~$ cat flag
picoCTF{s4n1ty_v3r1f13d_4a2b35fd}
pimaker-picoctf@webshell:~$ 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The weird string that displays is the flag we are looking for. All the flags in picoCTF are in this format. We copy and paste it into the problem box and click “Submit” to finish this problem.&lt;/p&gt;
</description>
				<guid isPermaLink="true">http://localhost:4000/ctf/obedient-cat/</guid>
			</item>
		
	</channel>
</rss>
